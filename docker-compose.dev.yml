# Development override configuration
version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: flask_app_dev
    environment:
      FLASK_ENV: development
      FLASK_DEBUG: "true"
      # Use Supabase for dev (with dev schema)
      DB_SCHEMA: development
    volumes:
      - .:/app  # Mount entire directory for hot reload
      - /app/__pycache__
      - /app/.pytest_cache
    command: flask run --host=0.0.0.0 --debug --reload
    stdin_open: true
    tty: true

  # Local PostgreSQL for development (optional - can use Supabase instead)
  db:
    image: postgres:15-alpine
    container_name: flask_db_dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: flask_website_generator_dev
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./docker/init-dev.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Mailhog for email testing in development
  mailhog:
    image: mailhog/mailhog
    container_name: flask_mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /maildir
    volumes:
      - mailhog_data:/maildir

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: flask_adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: pepa-linha

  # Development nginx with auto-reload
  nginx:
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx

volumes:
  postgres_data_dev:
  mailhog_data: